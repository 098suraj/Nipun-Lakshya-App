name: Dao Test
on:
  push:
    branches:
      - master
      - development
      - android-testing
  pull_request:
    branches:
      - master
      - development
      - android-testing

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    timeout-minutes: 55
    strategy:
      matrix:
        api-level: [ 26, 30 ]

    steps:
      - name: Delete unnecessary tools ðŸ”§
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: false # Don't remove Android tools
          tool-cache: true # Remove image tool cache - rm -rf "$AGENT_TOOLSDIRECTORY"
          dotnet: true # rm -rf /usr/share/dotnet
          haskell: true # rm -rf /opt/ghc...
          swap-storage: true # rm -f /mnt/swapfile (4GiB)
          docker-images: false # Takes 16s, enable if needed in the future
          large-packages: false # includes google-cloud-sdk and it's slow

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up JDK 11
        uses: actions/setup-java@v4.0.0
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: gradle

      - name: Grant Permission to Execute
        run: chmod +x gradlew

      - name: Access secrets
        env:
          STAGING_HASURA_URL: https://sandbox.hasura.nl.samagra.io
          STAGING_HASURA_SERVER_AUTH_TOKEN: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjRwSFNCOUYteGw5OGZLSnJ0LVEyVDV6UjQ3cyJ9.eyJhdWQiOiIxMjM0NTY3OC0zZDg0LTRkOGEtYTE5MS1kYTRlOTcyYzI5NTEiLCJleHAiOjE5OTM0MTA4NTYsImlhdCI6MTY2MTg3NDg1NiwiaXNzIjoiYWNtZS5jb20iLCJzdWIiOiJhYzEyYzliMy05OWVkLTQzOTYtYjFlZC01NDRmMzY4NjIzYjkiLCJqdGkiOiI3NmNmMGNlMi0wYTUxLTQzM2EtYWFmOC1lMGMyNzUwOTg2MmIiLCJhdXRoZW50aWNhdGlvblR5cGUiOiJQQVNTV09SRCIsInByZWZlcnJlZF91c2VybmFtZSI6Im5sYXBwQHNhbWFncmEiLCJhcHBsaWNhdGlvbklkIjoiMTIzNDU2NzgtM2Q4NC00ZDhhLWExOTEtZGE0ZTk3MmMyOTUxIiwicm9sZXMiOlsiT3BlblJvbGUiXSwic2lkIjoiMzQ4YWU5ODgtMWFmMS00YTE2LWFmNzgtNmJkZjNlNWZkYTUwIiwiYXV0aF90aW1lIjoxNjYxODc0ODU2LCJ0aWQiOiIwMTA1NjZmZC1lMWNiLWM2NTgtYjY1OS1hMWQzZTA3MGJhYTgiLCJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsiT3BlblJvbGUiLCJESUVUIiwibWFuYXZfc2FtcGFkYSJdLCJ4LWhhc3VyYS1kZWZhdWx0LXJvbGUiOiJPcGVuUm9sZSIsIlgtSGFzdXJhLVVzZXItSWQiOiJubGFwcEBzYW1hZ3JhMTIzIn19.NMLZrjDDDAy0sEVhrjewZfC1q35bt4QGZcT2tSQC0FGLFi1gHATw2DM3am5PtIJi02-ZqP1KOMOO_ysTh5AJYYGJFE-hWdRGFQIs8oUAks_4uF0TVsOXWJF0tIHZKRaEDwXiT3TeO8gPVs_hgeSBrBidnTXvRNjPMyq8Bmjlg7WD5h-j5sHg5hNybiVroioc-d5gMJDDiTQMWcnr_D9oSOzPBBbJymPf5muCvQuYPCfRT2yNptvdj1611ogYMW3DkiLU148cYC66JoqQK6gn61sML5s3yh3tBgFrXnv5qeYCEyjNwDKbwCOj6zrIicQFlg_ZlmdGymIT-WIN0NknhA
          STAGING_ODK_SERVER_URL: https://sandbox.central.nl.samagra.io/v1/key/PQJRIpVKS74ZaeVHh1EZdYDxJH0isL8iiDwmnXrxLRc2TnenS9qOtYbvr!osE6NQ/projects/2
          STAGING_FORM_ZIP_HASH: adc
          STAGING_FORM_ZIP_URL: https://sandbox.forms.nl.samagra.io
          STAGING_LOGINSERVICE_URL: https://sandbox.us.nl.samagra.io/api/
          DEFAULT_FUSION_AUTH_API_KEY: az79nHy-pQ2clijhJys4KrlgT8QO73TBdAqyMGIlBbmiM
          DEFAULT_FUSION_AUTH_PASSWORD: sandbox@demo123
          DEFAULT_FUSION_AUTH_APPLICATION_ID: 12345678-3d84-4d8a-a191-da4e972c2951
          DEFAULT_API_BASE_URL: https://sandbox.api.nl.samagra.io/api/
          AUTH_API_BASE_URL: https://sandbox.us.nl.samagra.io
          REFRESH_JWT_BASE: https://sandbox.fa.nl.samagra.io
          STAGING_GATEKEEPER_URL: https://sandbox.gatekeeper.nl.samagra.io
          STAGING_GATEKEEPER_API_KEY: my$e37r3836
          DEFAULT_CHATBOT_URLS: "{\"socketUrl\":\"ws://www.xyz.com:9898\",\"chatHistoryUrl\":\"http://www.xyz.com:9898/\",\"botDetailsUrl\":\"http://www.xyz.com:9898\",\"servicesUrl\":\"http://www.xyz.com:9898/\"}"
          ENFORCE_PARENT_FLOW: false
          DEFAULT_POSTHOG_SERVER_URL: https://www.abc.com
          DEFAULT_POSTHOG_SERVER_API_KEY: ABC
        shell: bash
        run: |
          echo STAGING_HASURA_URL="$STAGING_HASURA_URL" >> ./local.properties
          echo STAGING_HASURA_SERVER_AUTH_TOKEN="$STAGING_HASURA_SERVER_AUTH_TOKEN" >> ./local.properties
          echo STAGING_ODK_SERVER_URL="$STAGING_ODK_SERVER_URL" >> ./local.properties
          echo STAGING_FORM_ZIP_HASH="$STAGING_FORM_ZIP_HASH" >> ./local.properties
          echo STAGING_FORM_ZIP_URL="$STAGING_FORM_ZIP_URL" >> ./local.properties
          echo STAGING_LOGINSERVICE_URL="$STAGING_LOGINSERVICE_URL" >> ./local.properties
          echo DEFAULT_FUSION_AUTH_API_KEY="$DEFAULT_FUSION_AUTH_API_KEY" >> ./local.properties
          echo DEFAULT_FUSION_AUTH_PASSWORD="$DEFAULT_FUSION_AUTH_PASSWORD" >> ./local.properties
          echo DEFAULT_FUSION_AUTH_APPLICATION_ID="$DEFAULT_FUSION_AUTH_APPLICATION_ID" >> ./local.properties
          echo DEFAULT_API_BASE_URL="$DEFAULT_API_BASE_URL" >> ./local.properties
          echo AUTH_API_BASE_URL="$AUTH_API_BASE_URL" >> ./local.properties
          echo REFRESH_JWT_BASE="$REFRESH_JWT_BASE" >> ./local.properties
          echo STAGING_GATEKEEPER_URL="$STAGING_GATEKEEPER_URL" >> ./local.properties
          echo STAGING_GATEKEEPER_API_KEY="$STAGING_GATEKEEPER_API_KEY" >> ./local.properties
          echo DEFAULT_CHATBOT_URLS="$DEFAULT_CHATBOT_URLS" >> ./local.properties
          echo SLACK_BEARER="$SLACK_BEARER" >> ./local.properties
          echo SLACK_CHANNEL="$SLACK_CHANNEL" >> ./local.properties
          echo DEFAULT_POSTHOG_SERVER_URL="$DEFAULT_POSTHOG_SERVER_URL" >> ./local.properties
          echo DEFAULT_POSTHOG_SERVER_API_KEY="$DEFAULT_POSTHOG_SERVER_API_KEY" >> ./local.properties
          cat local.properties
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}
      # Needed to accept licenses
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3


      - name: Build projects before running emulator
        run: ./gradlew data:assembleDebugAndroidTest

      - name: Run connected tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          disk-size: 6000M
          heap-size: 600M
          script: ./gradlew data:connectedAndroidTest

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: build-reports
          path: app/build/test-results

  report:
    runs-on: ubuntu-latest
    needs: Setup # The report job will run after dao-test job
    if: ${{ always() }} # IMPORTANT: Execute report job regardless of status
    steps:
      - name: Download Test Reports Folder
        uses: actions/download-artifact@v2
        with:
          name: reports

      - name: Dao est Report
        uses: asadmansr/android-test-report-action@v1.2.0



